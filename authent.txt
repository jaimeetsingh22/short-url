now we are going to implement the authentication 
basically hum authentication me hum signup and login rakhenge 
for that hum do chiz samjhenge:
statefull and stateless


IN StateFull:
- every request from client is bind with a session id which is generated by server.
- this type of application keep track of user's activity on server.

IN Stateless:
- each request is independent of other, it does not carry any information about previous requests.
- this type of applciation does not keep track of users activity on server.

statefull:
which maintains or data or server side.
isme hota ye hai ki user jab login karta hai to uska data ka state server manage karta hai and record rakhta hai
**isme problem ye hai ki jab hum server ko refresh karenge to sara login session logout ho jayega and fir se login mangega and ye memory bhi consume karega

stateless:
which has no state.
isme hota hai ki server state ko manage nahi karta hai.


JWT authentication:-
it is based on JSON Web Tokens(JWT). JWT is an open standard (RFC 7519) that defines a compact method for securely transmitting information between parties
ye login uid or token and data dono user ke paas rehta hai or jab bhi user ise server ke paas leke aata hai to to server authenticate kar user ko response de deta hai 
isme data har koi read kar sakta hai par usme change koi nahi kar sakta hai

lets implement and understand it 



** note  : **

IN StateFull type:
- User can be logged in multiple times but all sessions will refer to same user.
- If you logout from one browser then another browser still remains logged in.
 also it take more times to fetch datas and not optimized  for large amount of data in statefull apps.

IN Stateless Type:
- User cannot be logged in from multiple browsers at once.
- After logging out from one browser then you have to log in again from another browser.




 jwt is a good way for implementing auth in nodejs application.
 jwt token is base64 encoded json web token which contains user information like username, email etc.


so basically authorisation ka do part hota hai pehla ki 
cookies me store karke jo ki sirf browser me store hota h client ke 
isme hota hai ki ye sirf browser me hi kaam karega mobile application me nahi 

dusra hota hai response bhej ke jo ki headers me inbuilt authorisation ke naam se hota hai to usme as "Bearer mcoiewjqj3ok543qlekmoi34534lwkj" value paas karke bhejte hai jo ki koi v device and mobile applciation ke liye valid hota hai. ye har jagah browser and mobile applciation dono ke liye valid hai.

now lets talk about stateless authentication:
1) Client sends request with credentials (username & password).
2) Server validates these credentials.
3) if validated then generates a JSON Web Token(JWT), signs it with secret key and returns this JWT to the client.
3) If they are correct then generates a JSON Web Token(JWT), signs it with secret key and returns this JWT back to the client as token in json response.
4) now the client comes to login he set headers.authorization = "Bearer token"
5) so when ever any api call happens server checks this header if its there then check the token otherwise ask  for the tokens or relogin the user so In every subsequent requests client send this header so that server knows who is making request.

in hind : jab koi user login karega to uska data pehla check hoga ki ye user humare database me hai ya nahi hai uske baad jab user milega tab server token(jwt signs it with secret key) generate karega and use user ko json response me bhej dega. fir jab jab bhi user ayega ya api call karega to use header me authentication ke liye headers me ye token bhejna padega taki wo server read kare or user ka login session show kar jaye.
hum in session ya token ko expiry time bhi de sakte hai